{
  "integration": "Integration with your service",
  "merchant": "Merchant docs",
  "name": "Name",
  "description": "Description",
  "type": "Type",
  "or": "or",
  "createOrder": "Create order",
  "useMethod": "Use method",
  "titleUseMethod": "You can find the documentation for the authorization system in your personal cabinet. More about working with methods and additional data can be found on the",
  "notifyIpn": "Notification about the payment request status change",
  "titleNotifyIpn": "In order to receive a notification of order status change when creating an order, you need to send additional parameters:",
  "clientCallbackUrl": " a callback when the application is completed the client will see a button for return back to the site and the client will be directed to this URL",
  "hideOutData1": "hide the recipient's details",
  "hideOutData": "secure out requisites",
  "ipnUrl": "HTTP/HTTPS link to notify your server.",
  "paymentNotificationURL": "instant payment notification url",
  "ipnSecret1": "Random string for creating a request signature (for maintaining request integrity)",
  "ipnSecret": "string for create secure hash in ipn url",
  "subTitleIpn1": "The request will be sent by POST method",
  "subTitleIpn2": "IPN will be sent once",
  "subTitleIpn3": "IPN delivery is not guaranteed (if the server did not respond to the request it will not be resent)",
  "exampleIpn": "Example IPN",
  "order": "order",
  "ipnUrl1": "will be called when the order has changed status",
  "in": "",
  "currentStatus": "current status",
  "doc": "You can find the documentation for the authorization system in your personal cabinet. More about working with methods and additional data can be found on the\n\n",
  "notify": "Notification about the payment request status change",
  "timestamp": "unix time ipn notify",
  "toValues": "order requisites",
  "statusesList": "Statuses list",
  "new": "new order",
  "waitPayment": "wait user payment",
  "errorPayment": "error user payment (merchant send error)",
  "inProgress": "in progress (expects admin or payment of the application)",
  "inProgressPayout": "in line for payment (payment accepted successfully) (if configured in currency auto payment it will be initialized)",
  "errorPayout": "payment error (error occurred during payment)",
  "hold": "frozen (problems with the application)",
  "done": "order completed successfully",
  "returned": "the order was paid but not all exchange conditions were fulfilled and the means of return to the sender",
  "deleted": "order deleted (canceled)",
  "verification": "Verification of the request checksum (IPN)",
  "paymentControl": "Payment control",
  "paymentControlTitle": "If you need to control the status of requests, create them using authorization, then all requests will be reflected in your personal cabinet;",
  "paymentControlTitle1": "You can save the UID of the request and secret and manually go to the request by specifying this data in the address bar",
  "payment": "Payment",
  "paymentTitle": "You can use / payment / to show payment page",
  "paymentTitle1": "Also you can simply give a link to the exchange as it is seen by all clients according to the same scheme as it is specified in the first variant except /payment/ should be replaced with /order/",
  "paymentTitle2": "There are parameters in the method that allow you to display the payment data or the form of payment on your site you can use them. IMPORTANT: if the method with manual payment you need to update the status of the order from waitPayment to inProgress after payment.",
  "idRoute": "id route",
  "linkPartner": "link partner",
  "amount": "amount in",
  "key":"key name",
  "value":"value for this field",
  "lang": "lang client (ru,en)",
  "agreement": "agreement"

}